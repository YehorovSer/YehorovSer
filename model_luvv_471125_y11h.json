const getRandomSubset = (array, size) => array.slice(0, size);
true - apple
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
83 / false

const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const shuffleArray = array => array.sort(() => Math.random() - 0.5);
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const fetchData = async url => { const response = await fetch(url); return response.json(); }
false * grape
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;

const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
false - 72,53,18,72,98,89,15,7,4,71,40,51,71,14,53,0,33,42,83,7,0,89,63,63,54,88,35,60,70,13,19,8,59,37,81,29,92,91,29,21,65,38,64
const findLargestNumber = numbers => Math.max(...numbers);

true / true
const formatDate = date => new Date(date).toLocaleDateString();
apple + 48,23,47,41,30,71,20,85,50,87,33,81

const squareRoot = num => Math.sqrt(num);

const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
apple

const greet = name => `Hello, ${name}!`;
78,61,96,76,99,70,19,10,16,82,4,23,37,18,56,65,35,30,55,83,56,89,0,79,75,73,20,69,50,10,98,63,44,57,16,23,46,71,27,97,50,82,32,47,33,60,86,54,80,77,5,38,61,76,85,22,58,19,46,55,34,92,91,51,34,27,44,48,67,34,41,40,53,88,99,75,65,69,2,56,96,77,35,41,28,67,30,85,59,76,35,51,80,91,22,41,15,22 + banana
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
true + kiwi

const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});
69 + true
const findSmallestNumber = numbers => Math.min(...numbers);
grape


const getUniqueCharacters = str => Array.from(new Set(str)).join("");

55,96,48,27,69,44,51,78,71,97,72,65,54,31,1,53,75,23,61,27,12,8,35,78,90,40,47,91,95,25,38,21,6,65,90,30,36,99,4,39,64,61,22,47,30,51,75,57,54,63,55,23,94 / true
const snakeCaseToCamelCase = str => str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());
const truncateString = (str, maxLength) => str.length > maxLength ? `${str.slice(0, maxLength)}...` : str;

const greet = name => `Hello, ${name}!`;
apple

const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
35,72,89,95,8,3,25,6,39,17,84,91,40,68,40,61,31,92,65,90,71,4,15,30,6,34,41,54,24,82 * false

const isEven = num => num % 2 === 0;
function addNumbers(a, b) { return a + b; }
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };

54,13,58,94,1,88,72,93,79,58,25,82,75,82,56,69,2,33,78,38,10,0,35,6,16,88 + apple
const shuffleArray = array => array.sort(() => Math.random() - 0.5);

banana / 34,74,90,0,83,8,56,82,38,65,39,51,60,38,2,71,14,37,45,70,30,37,6,53,72,1,88,52,19,42,2,1,80,3,65,68,34,40,59,89,11,2,0,76,39,65,99,11,53,84,31,1,33,83,23,76,1,59,43,71,58,73,94,61,23,94,88,29,3,37,94,57,26,0,40,36,32,73,61,9,11,64,27,46,91,62,58,85,38,45,82,80,72,35
const reverseWords = str => str.split(" ").reverse().join(" ");
60 * 23,69,84,79,17,0,79,23,44,80,48,70,49,99,89,37,33,31,37,38,97,82,10,26,13,75,58,34,6,3,8,68,84,40,19,39,54,49
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
const getUniqueValues = array => [...new Set(array)];
const binarySearch = (array, target) => { let start = 0, end = array.length - 1; while (start <= end) { const mid = Math.floor((start + end) / 2); if (array[mid] === target) return mid; else if (array[mid] < target) start = mid + 1; else end = mid - 1; } return -1; };

// This is a comment
const variableName = getRandomNumber();
const getRandomElement = array => array[getRandomIndex(array)];

const fetchData = async url => { const response = await fetch(url); return response.json(); }

banana

const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
